// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: proto/data.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// request to owl service needs this to formulate a valid query to write to the db
type DbWriteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`                          // raw sql string
	Params        []string               `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`                        // contains the variable values like the value of name: "john", escaping allows to avoid sql injection here & type safety before runtime
	RequestId     string                 `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // helps identify where the request came from "service1 called this in func123", etc..
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbWriteRequest) Reset() {
	*x = DbWriteRequest{}
	mi := &file_proto_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbWriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbWriteRequest) ProtoMessage() {}

func (x *DbWriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbWriteRequest.ProtoReflect.Descriptor instead.
func (*DbWriteRequest) Descriptor() ([]byte, []int) {
	return file_proto_data_proto_rawDescGZIP(), []int{0}
}

func (x *DbWriteRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *DbWriteRequest) GetParams() []string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *DbWriteRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// Owl returns this on request
type DbWriteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	AffectedRows  int64                  `protobuf:"varint,3,opt,name=affected_rows,json=affectedRows,proto3" json:"affected_rows,omitempty"`
	GeneratedId   string                 `protobuf:"bytes,4,opt,name=generated_id,json=generatedId,proto3" json:"generated_id,omitempty"` // for id of new row id if successful
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbWriteResponse) Reset() {
	*x = DbWriteResponse{}
	mi := &file_proto_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbWriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbWriteResponse) ProtoMessage() {}

func (x *DbWriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbWriteResponse.ProtoReflect.Descriptor instead.
func (*DbWriteResponse) Descriptor() ([]byte, []int) {
	return file_proto_data_proto_rawDescGZIP(), []int{1}
}

func (x *DbWriteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DbWriteResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DbWriteResponse) GetAffectedRows() int64 {
	if x != nil {
		return x.AffectedRows
	}
	return 0
}

func (x *DbWriteResponse) GetGeneratedId() string {
	if x != nil {
		return x.GeneratedId
	}
	return ""
}

type TranscriptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TranscriptId  string                 `protobuf:"bytes,1,opt,name=transcript_id,json=transcriptId,proto3" json:"transcript_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscriptRequest) Reset() {
	*x = TranscriptRequest{}
	mi := &file_proto_data_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscriptRequest) ProtoMessage() {}

func (x *TranscriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscriptRequest.ProtoReflect.Descriptor instead.
func (*TranscriptRequest) Descriptor() ([]byte, []int) {
	return file_proto_data_proto_rawDescGZIP(), []int{2}
}

func (x *TranscriptRequest) GetTranscriptId() string {
	if x != nil {
		return x.TranscriptId
	}
	return ""
}

// Response message that contains the transcript summary data
type TranscriptSummaryRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TranscriptionSummary string                 `protobuf:"bytes,1,opt,name=transcription_summary,json=transcriptionSummary,proto3" json:"transcription_summary,omitempty"`
	TranscriptionTopics  []*TranscriptionTopic  `protobuf:"bytes,2,rep,name=transcription_topics,json=transcriptionTopics,proto3" json:"transcription_topics,omitempty"`
	TranscriptionAlerts  []*TranscriptionAlert  `protobuf:"bytes,3,rep,name=transcription_alerts,json=transcriptionAlerts,proto3" json:"transcription_alerts,omitempty"`
	TranscriptId         string                 `protobuf:"bytes,4,opt,name=transcript_id,json=transcriptId,proto3" json:"transcript_id,omitempty"` // Added to identify which transcript this is
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *TranscriptSummaryRequest) Reset() {
	*x = TranscriptSummaryRequest{}
	mi := &file_proto_data_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscriptSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscriptSummaryRequest) ProtoMessage() {}

func (x *TranscriptSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscriptSummaryRequest.ProtoReflect.Descriptor instead.
func (*TranscriptSummaryRequest) Descriptor() ([]byte, []int) {
	return file_proto_data_proto_rawDescGZIP(), []int{3}
}

func (x *TranscriptSummaryRequest) GetTranscriptionSummary() string {
	if x != nil {
		return x.TranscriptionSummary
	}
	return ""
}

func (x *TranscriptSummaryRequest) GetTranscriptionTopics() []*TranscriptionTopic {
	if x != nil {
		return x.TranscriptionTopics
	}
	return nil
}

func (x *TranscriptSummaryRequest) GetTranscriptionAlerts() []*TranscriptionAlert {
	if x != nil {
		return x.TranscriptionAlerts
	}
	return nil
}

func (x *TranscriptSummaryRequest) GetTranscriptId() string {
	if x != nil {
		return x.TranscriptId
	}
	return ""
}

type TranscriptionTopic struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscriptionTopic) Reset() {
	*x = TranscriptionTopic{}
	mi := &file_proto_data_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscriptionTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscriptionTopic) ProtoMessage() {}

func (x *TranscriptionTopic) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscriptionTopic.ProtoReflect.Descriptor instead.
func (*TranscriptionTopic) Descriptor() ([]byte, []int) {
	return file_proto_data_proto_rawDescGZIP(), []int{4}
}

func (x *TranscriptionTopic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TranscriptionTopic) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type TranscriptionAlert struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Quote         string                 `protobuf:"bytes,3,opt,name=quote,proto3" json:"quote,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscriptionAlert) Reset() {
	*x = TranscriptionAlert{}
	mi := &file_proto_data_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscriptionAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscriptionAlert) ProtoMessage() {}

func (x *TranscriptionAlert) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscriptionAlert.ProtoReflect.Descriptor instead.
func (*TranscriptionAlert) Descriptor() ([]byte, []int) {
	return file_proto_data_proto_rawDescGZIP(), []int{5}
}

func (x *TranscriptionAlert) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TranscriptionAlert) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TranscriptionAlert) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

// New result message for processing confirmation
type PigeonTranscriptResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PigeonTranscriptResponse) Reset() {
	*x = PigeonTranscriptResponse{}
	mi := &file_proto_data_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PigeonTranscriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PigeonTranscriptResponse) ProtoMessage() {}

func (x *PigeonTranscriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PigeonTranscriptResponse.ProtoReflect.Descriptor instead.
func (*PigeonTranscriptResponse) Descriptor() ([]byte, []int) {
	return file_proto_data_proto_rawDescGZIP(), []int{6}
}

func (x *PigeonTranscriptResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PigeonTranscriptResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_data_proto protoreflect.FileDescriptor

const file_proto_data_proto_rawDesc = "" +
	"\n" +
	"\x10proto/data.proto\x12\n" +
	"transcript\"]\n" +
	"\x0eDbWriteRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12\x16\n" +
	"\x06params\x18\x02 \x03(\tR\x06params\x12\x1d\n" +
	"\n" +
	"request_id\x18\x03 \x01(\tR\trequestId\"\x98\x01\n" +
	"\x0fDbWriteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12#\n" +
	"\raffected_rows\x18\x03 \x01(\x03R\faffectedRows\x12!\n" +
	"\fgenerated_id\x18\x04 \x01(\tR\vgeneratedId\"8\n" +
	"\x11TranscriptRequest\x12#\n" +
	"\rtranscript_id\x18\x01 \x01(\tR\ftranscriptId\"\x9a\x02\n" +
	"\x18TranscriptSummaryRequest\x123\n" +
	"\x15transcription_summary\x18\x01 \x01(\tR\x14transcriptionSummary\x12Q\n" +
	"\x14transcription_topics\x18\x02 \x03(\v2\x1e.transcript.TranscriptionTopicR\x13transcriptionTopics\x12Q\n" +
	"\x14transcription_alerts\x18\x03 \x03(\v2\x1e.transcript.TranscriptionAlertR\x13transcriptionAlerts\x12#\n" +
	"\rtranscript_id\x18\x04 \x01(\tR\ftranscriptId\"J\n" +
	"\x12TranscriptionTopic\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\"`\n" +
	"\x12TranscriptionAlert\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x14\n" +
	"\x05quote\x18\x03 \x01(\tR\x05quote\"N\n" +
	"\x18PigeonTranscriptResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2w\n" +
	"\rPigeonService\x12f\n" +
	"\x18ProcessTranscriptSummary\x12$.transcript.TranscriptSummaryRequest\x1a$.transcript.PigeonTranscriptResponse2\\\n" +
	"\n" +
	"OwlService\x12N\n" +
	"\x13ProcessWriteRequest\x12\x1a.transcript.DbWriteRequest\x1a\x1b.transcript.DbWriteResponseB*Z(github.com/yourusername/transcript/protob\x06proto3"

var (
	file_proto_data_proto_rawDescOnce sync.Once
	file_proto_data_proto_rawDescData []byte
)

func file_proto_data_proto_rawDescGZIP() []byte {
	file_proto_data_proto_rawDescOnce.Do(func() {
		file_proto_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_data_proto_rawDesc), len(file_proto_data_proto_rawDesc)))
	})
	return file_proto_data_proto_rawDescData
}

var file_proto_data_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_data_proto_goTypes = []any{
	(*DbWriteRequest)(nil),           // 0: transcript.DbWriteRequest
	(*DbWriteResponse)(nil),          // 1: transcript.DbWriteResponse
	(*TranscriptRequest)(nil),        // 2: transcript.TranscriptRequest
	(*TranscriptSummaryRequest)(nil), // 3: transcript.TranscriptSummaryRequest
	(*TranscriptionTopic)(nil),       // 4: transcript.TranscriptionTopic
	(*TranscriptionAlert)(nil),       // 5: transcript.TranscriptionAlert
	(*PigeonTranscriptResponse)(nil), // 6: transcript.PigeonTranscriptResponse
}
var file_proto_data_proto_depIdxs = []int32{
	4, // 0: transcript.TranscriptSummaryRequest.transcription_topics:type_name -> transcript.TranscriptionTopic
	5, // 1: transcript.TranscriptSummaryRequest.transcription_alerts:type_name -> transcript.TranscriptionAlert
	3, // 2: transcript.PigeonService.ProcessTranscriptSummary:input_type -> transcript.TranscriptSummaryRequest
	0, // 3: transcript.OwlService.ProcessWriteRequest:input_type -> transcript.DbWriteRequest
	6, // 4: transcript.PigeonService.ProcessTranscriptSummary:output_type -> transcript.PigeonTranscriptResponse
	1, // 5: transcript.OwlService.ProcessWriteRequest:output_type -> transcript.DbWriteResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_data_proto_init() }
func file_proto_data_proto_init() {
	if File_proto_data_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_data_proto_rawDesc), len(file_proto_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_data_proto_goTypes,
		DependencyIndexes: file_proto_data_proto_depIdxs,
		MessageInfos:      file_proto_data_proto_msgTypes,
	}.Build()
	File_proto_data_proto = out.File
	file_proto_data_proto_goTypes = nil
	file_proto_data_proto_depIdxs = nil
}
